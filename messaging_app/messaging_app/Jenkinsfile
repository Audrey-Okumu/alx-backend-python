pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/YOUR_GITHUB_USERNAME/alx-backend-python.git'
        APP_DIR = 'messaging_app'
        DOCKER_IMAGE = 'YOUR_DOCKERHUB_USERNAME/messaging_app:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Cloning repository...'
                git branch: 'main', url: "${REPO_URL}", credentialsId: 'github-credentials-id'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        echo 'Installing dependencies...'
                        sh '''
                        python3 -m venv venv
                        . venv/bin/activate
                        pip install --upgrade pip
                        pip install -r requirements.txt
                        '''
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        echo 'Running tests with pytest...'
                        sh '''
                        . venv/bin/activate
                        pytest --junitxml=test-results.xml
                        '''
                    }
                }
            }
            post {
                always {
                    junit '**/test-results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir("${APP_DIR}") {
                    script {
                        echo 'Building Docker image...'
                        sh "docker build -t ${DOCKER_IMAGE} ."
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    echo 'Pushing Docker image to Docker Hub...'
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials-id', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}
